@page
@model V___Medicals.Pages.Home.IndexModel
@{
    Layout = "_DashboardLayout";
    ViewData["Title"] = "Dashboard";
}
<marquee class="bg-light font-weight-bold text-danger p-0 m-0">Please ensure the data you enter is accurate as per the new SLAs. Ask questions if you are unsure. - Management</marquee>
<div class="row mb-3 d-flex justify-content-center">
    <div class="card   m-3" style="width: 18rem;">
        <img class="card-img-top" src="~/Files/patient_icon.png" alt="Card image cap" width="50" height="200">
        <div class="card-body">
            <a href="/Patients/Index" class="card-text">Total Patients: @Model.TotalPatients</a>
        </div>
    </div>
    <div class="card  m-3" style="width: 18rem;">
        <img class="card-img-top" src="~/Files/doctor_icon.png" alt="Card image cap" width="50" height="200">
        <div class="card-body">
            <a href="/Doctors/Index" class="card-text">Total Doctors: @Model.TotalDoctors</a>
        </div>
    </div>
    <div class="card  m-3" style="width: 18rem;">
        <img class="card-img-top" src="~/Images/appointments_icon.jpeg" alt="Card image cap" width="50" height="200">
        <div class="card-body">
            <a href="/Appointments/Index" class="card-text">Total Appointments: @Model.TotalAppointments</a>
        </div>
    </div>

</div>
<hr />
@*<div class="row my-3 d-flex justify-content-center">
    <div id="chartContainer1" class="col m-2 col-lg-5 col-md-4 col-sm-12 col-xs-12"></div>
    <div id="chartContainer2" class="col m-2 col-lg-5 col-md-4 col-sm-12 col-xs-12"></div>
    
</div>
<div class="row my-3 d-flex justify-content-center">
    <div id="chartContainer3" class="col m-2 col-lg-5 col-md-4 col-sm-12 col-xs-12"></div>
    </div>*@
<div class="container">
    <div class="row  my-3 d-flex justify-content-center">
        <div class="col card m-2  mb-3 col-lg-5 col-md-4 col-sm-12 col-xs-12">
            <div id="chartContainer1" style="height: 350px;"></div>
        </div>
        <div class="col card m-2 mb-3 col-lg-5 col-md-4 col-sm-12 col-xs-12">
            <div id="chartContainer2" style="height: 350px;"></div>
        </div>
        <hr />
        <div class="col card my-3 col-lg-5 col-md-4 col-sm-12 col-xs-12">
            <div id="chartContainer3" style="height: 350px;"></div>
        </div>
    </div>
</div>

    @section Scripts {
        @{await Html.RenderPartialAsync("_ValidationScriptsPartial");
        }
        <script>
    window.onload = function () {
        var appointmentsByDate = @Html.Raw(Json.Serialize(Model.result));
        var avgappointments = @Html.Raw(Json.Serialize(Model.avgAppointments));
        console.log(avgappointments);
        var appointmentsBySpeciality = @Html.Raw(Json.Serialize(Model.appointmentsBySpeciality));
        console.log(appointmentsBySpeciality);
        var appointmentsByStatus = @Html.Raw(Json.Serialize(Model.appointmentsByStatus));
        console.log("status: "+appointmentsByStatus);
        var dataPoints = appointmentsByDate.map(function (a) {
            return { x: new Date(a.date), y: a.count };
        });
        console.log("data points:" + dataPoints);
        var chart = new CanvasJS.Chart("chartContainer1", {
                creditText: "",
                animationEnabled: true,
                title: {
                    text: "APPOINTMENTS",
                    //fontFamily: "Arial",
                    //fontSize: 24,
                    //fontWeight: "bold",
                },
            data: [{
                type: "spline",
               // type: "column",
                dataPoints: dataPoints,
                color: "rgba(54, 162, 235, 0.5)"
            }],
            axisY: {
                title: "Number of Appointments",
                includeZero: true,
                interval: 1,
                stripLines: [{
                    value: parseInt( avgappointments),
                    label: "Average: " + parseInt( avgappointments)
                    }]
            },
            axisX: {
                //title: "Date",
                valueFormatString: "DD MMM",
                //interval: 1
            }
        });

        chart.render();
        var chart2 = new CanvasJS.Chart("chartContainer2", {
            animationEnabled: true,
            title: {
                text: "LAST 7 DAYS SPECIALITIES",
                //fontFamily: "Arial",
                //fontSize: 24,
                //fontWeight: "bold",
            },
            axisY: {
                includeZero: true,
                interval: 1,
            },
            data: [{
                type: "column",
                dataPoints: appointmentsBySpeciality.map(a => ({ label: a.speciality, y: a.count }))
            }]
        });
        chart2.render();
        var canvas = new CanvasJS.Chart("chartContainer3", {
            animationEnabled: true,
            title: { text: "Statuses" },
            data: [{
                type: "pie",
                dataPoints: appointmentsByStatus.map(a => ({ label: a.status, y: a.count }))
            }]
        });

        // Render the chart
        canvas.render();
    }
        </script>
        <script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>

    }
